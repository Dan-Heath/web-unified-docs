[
  {
    "heading": "Terraform Language"
  },
  {
    "title": "Overview",
    "path": ""
  },
  {
    "title": "Attributes as Blocks - Configuration Language",
    "path": "attr-as-blocks",
    "hidden": true
  },
  {
    "title": "Style guide",
    "path": "style"
  },
  {
    "title": "Syntax",
    "routes": [
      {
        "title": "Overview",
        "path": "syntax"
      },
      {
        "title": "Configuration syntax",
        "path": "syntax/configuration"
      },
      {
        "title": "JSON configuration syntax",
        "path": "syntax/json"
      }
    ]
  },
  {
    "title": "Files and configuration structure",
    "routes": [
      {
        "title": "Overview",
        "path": "files"
      },
      {
        "title": "Configuration files",
        "path": "files/configuration"
      },
      {
        "title": "Override files",
        "path": "files/override"
      },
      {
        "title": "Dependency lock file",
        "path": "files/dependency-lock"
      },
      {
        "title": "Test files",
        "path": "files/tests"
      }
    ]
  },
  {
    "title": "Concepts",
    "routes": [
      {
        "title": "Providers",
        "path": "concept/providers"
      },
      {
        "title": "State",
        "path": "concept/state"
      },
      {
        "title": "Stacks",
        "path": "concept/stacks"
      }
    ]
  },
  {
    "divider": true
  },
  {
    "title": "Define and install providers",
    "routes": [
      {
        "title": "Define providers",
        "path": "providers"
      },
      {
        "title": "Install providers",
        "path": "providers/requirements"
      }
    ]
  },
  {
    "title": "Create and manage resources",
    "routes": [
      {
        "title": "Overview",
        "path": "resources"
      },
      {
        "title": "Configure a resource",
        "path": "resources/configure"
      },
      {
        "title": "Destroy a resource",
        "path": "resources/destroy"
      }
    ]
  },
  {
    "title": "Set configuration parameters",
    "routes": [
      {
        "title": "Overview",
        "path": "parameterize"
      },
      {
        "title": "Define input arguments with variables",
        "path": "parameterize/variable"
      },
      {
        "title": "Reuse expressions with locals",
        "path": "parameterize/local"
      },
      {
        "title": "Expose module data with outputs",
        "path": "parameterize/output"
      }
    ]
  },
  {
    "title": "Manage sensitive data",
    "routes": [
      {
        "title": "Overview",
        "path": "manage-sensitive-data"
      },
      {
        "title": "Ephemeral values in resources",
        "path": "manage-sensitive-data/ephemeral"
      },
      {
        "title": "Pass temporary values to a resource",
        "path": "manage-sensitive-data/write-only",
        "alias": "write only"
      }
    ]
  },
  {
    "title": "Query infrastructure data",
    "path": "data-sources",
    "alias": "data sources"
  },
  {
    "title": "Build and use modules",
    "routes": [
      {
        "title": "Overview",
        "path": "modules"
      },
      {
        "title": "Use modules",
        "path": "modules/configuration"
      },
      {
        "title": "Develop modules",
        "routes": [
          {
            "title": "Overview",
            "path": "modules/develop"
          },
          {
            "title": "Standard module structure",
            "path": "modules/develop/structure"
          },
          {
            "title": "Providers within modules",
            "path": "modules/develop/providers"
          },
          {
            "title": "Best practices for composing modules",
            "path": "modules/develop/composition"
          },
          {
            "title": "Publish modules",
            "path": "modules/develop/publish"
          },
          {
            "title": "Refactor modules",
            "path": "modules/develop/refactoring"
          }
        ]
      }
    ]
  },
  {
    "title": "Manage state",
    "routes": [
      {
        "title": "Overview",
        "path": "state"
      },
      {
        "title": "Refactor state",
        "path": "state/refactor"
      },
      {
        "title": "Remove a resource from state",
        "path": "state/remove"
      },
      {
        "title": "Workspaces",
        "path": "state/workspaces"
      },
      {
        "title": "Remote state",
        "routes": [
          { "title": "Overview", "path": "state/remote" },
          { "title": "Configure backend", "path": "state/remote/backends" },
          { "title": "Lock remote state", "path": "state/remote/locking" }
        ]
      }
    ]
  },
  {
    "title": "Import existing resources",
    "routes": [
      {
        "title": "Import a resource",
        "path": "import"
      },
      {
        "title": "Generate resource configuration",
        "path": "import/generating-configuration"
      }
    ]
  },
  {
    "title": "Validate and test configuration",
    "routes": [
      {
        "title": "Validate configuration",
        "path": "validate"
      },
      {
        "title": "Test configuration",
        "routes": [
          {
            "title": "Overview",
            "path": "tests"
          },
          {
            "title": "Mocks",
            "path": "tests/mocking"
          }
        ]
      }
    ]
  },
  {
    "title": "Scale infrastructure with Stacks",
    "badge": {
      "text": "BETA",
      "type": "outlined",
      "color": "neutral"
    },
    "routes": [
      {
        "title": "Overview",
        "path": "stacks"
      },
      {
        "title": "Design a Stack",
        "path": "stacks/design"
      },
      {
        "title": "Create a Stack",
        "routes": [
          {
            "title": "Define configuration",
            "path": "stacks/create/config"
          },
          {
            "title": "Declare providers",
            "path": "stacks/create/declare-providers"
          }
        ]
      },
      {
        "title": "Define deployments",
        "routes": [
          {
            "title": "Define configuration",
            "path": "stacks/deploy/config"
          },
          {
            "title": "Set conditions for deployment plans",
            "path": "stacks/deploy/conditions"
          },
          {
            "title": "Authenticate a Stack",
            "path": "stacks/deploy/authenticate"
          },
          {
            "title": "Pass data from one Stack to another",
            "path": "stacks/deploy/pass-data"
          }
        ]
      }
    ]
  },
  {
    "title": "Provision resources",
    "routes": [
      {
        "title": "Overview",
        "path": "provision"
      },
      {
        "title": "Configure machine images",
        "path": "provision/machine-images"
      },
      {
        "title": "Resource-specific arguments",
        "path": "provision/compute",
        "alias": "cloud-init"
      },
      {
        "title": "cloud-config data source",
        "path": "provision/cloud-config"
      },
      {
        "title": "Provisioners",
        "routes": [
          {
            "title": "Overview",
            "path": "provision/provisioners"
          },
          {
            "title": "Run CLI commands",
            "path": "provision/provisioners/cli"
          },
          {
            "title": "Determine when provisioners run",
            "path": "provision/provisioners/when"
          }
        ]
      }
    ]
  },
  {
    "title": "Upgrade to Terraform v1.12",
    "path": "upgrade-guides"
  },
  {
    "title": "v1.x compatibility promises",
    "path": "v1-compatibility-promises"
  },
  {
    "divider": true
  },
  {
    "heading": "REFERENCE"
  },
  {
    "title": "Configuration blocks",
    "routes": [
      {
        "title": "check",
        "path": "reference/block/check"
      },
      {
        "title": "data",
        "path": "reference/block/data"
      },
      {
        "title": "ephemeral",
        "path": "reference/block/ephemeral"
      },
      {
        "title": "import",
        "path": "reference/block/import"
      },
      {
        "title": "locals",
        "path": "reference/block/locals"
      },
      {
        "title": "module",
        "routes": [
          {
            "title": "Overview",
            "path": "reference/block/module"
          },
          {
            "title": "source",
            "path": "reference/block/module/source"
          }
        ]
      },
      {
        "title": "moved",
        "path": "reference/block/moved"
      },
      {
        "title": "output",
        "path": "reference/block/output"
      },
      {
        "title": "provider",
        "path": "reference/block/provider"
      },
      {
        "title": "removed",
        "path": "reference/block/removed"
      },
      {
        "title": "resource",
        "path": "reference/block/resource"
      },
      {
        "title": "stacks",
        "badge": {
          "text": "BETA",
          "type": "outlined",
          "color": "neutral"
        },
        "routes": [
          {
            "title": "Configuration file",
            "path": "reference/stacks/tfstack"
          },
          {
            "title": "Deployment configuration file",
            "path": "reference/stacks/tfdeploy"
          },
          {
            "title": "tfstacks CLI",
            "path": "reference/stacks/tfstacks-cli"
          }
        ]
      },
      {
        "title": "terraform",
        "routes": [
          {
            "title": "Overview",
            "path": "reference/block/terraform"
          },
          {
            "title": "backend",
            "routes": [
              {
                "title": "Overview",
                "path": "reference/block/terraform/backend"
              },
              {
                "title": "local",
                "path": "reference/block/terraform/backend/local"
              },
              {
                "title": "remote",
                "path": "reference/block/terraform/backend/remote"
              },
              {
                "title": "azurerm",
                "path": "reference/block/terraform/backend/azurerm"
              },
              {
                "title": "consul",
                "path": "reference/block/terraform/backend/consul"
              },
              {
                "title": "cos",
                "path": "reference/block/terraform/backend/cos"
              },
              {
                "title": "gcs",
                "path": "reference/block/terraform/backend/gcs"
              },
              {
                "title": "http",
                "path": "reference/block/terraform/backend/http"
              },
              {
                "title": "Kubernetes",
                "path": "reference/block/terraform/backend/kubernetes"
              },
              {
                "title": "oci",
                "path": "reference/block/terraform/backend/oci"
              },
              {
                "title": "oss",
                "path": "reference/block/terraform/backend/oss"
              },
              {
                "title": "pg",
                "path": "reference/block/terraform/backend/pg"
              },
              {
                "title": "s3",
                "path": "reference/block/terraform/backend/s3"
              }
            ]
          }
        ]
      },
      {
        "title": "variable",
        "path": "reference/block/variable"
      }
    ]
  },
  {
    "title": "Meta-arguments",
    "path": "reference/meta-arguments"
  },
  {
    "title": "Built-in resources",
    "routes": [
      {
        "title": "<code>terraform_data</code> resource reference",
        "path": "reference/terraform-data"
      },
      {
        "title": "The <code>terraform_remote_state</code> data source",
        "path": "reference/remote-state-data"
      }
    ]
  },
  {
    "title": "Expressions",
    "routes": [
      {
        "title": "Overview",
        "path": "reference/expressions"
      },
      {
        "title": "Types and values",
        "path": "reference/expressions/types"
      },
      {
        "title": "Strings and templates",
        "path": "reference/expressions/strings"
      },
      {
        "title": "References to values",
        "path": "reference/expressions/references"
      },
      {
        "title": "Operators",
        "path": "reference/expressions/operators"
      },
      {
        "title": "Function calls",
        "path": "reference/expressions/function-calls"
      },
      {
        "title": "Conditional expressions",
        "path": "reference/expressions/conditionals"
      },
      {
        "title": "For expressions",
        "path": "reference/expressions/for"
      },
      {
        "title": "Splat expressions",
        "path": "reference/expressions/splat"
      },
      {
        "title": "Dynamic blocks",
        "path": "reference/expressions/dynamic-blocks"
      },
      {
        "title": "Type constraints",
        "path": "reference/expressions/type-constraints"
      },
      {
        "title": "Version constraints",
        "path": "reference/expressions/version-constraints"
      }
    ]
  },
  {
    "title": "Functions",
    "routes": [
      {
        "title": "Overview",
        "path": "reference/functions"
      },
      {
        "title": "Numeric functions",
        "routes": [
          {
            "title": "<code>abs</code>",
            "path": "reference/functions/abs"
          },
          {
            "title": "<code>ceil</code>",
            "path": "reference/functions/ceil"
          },
          {
            "title": "<code>floor</code>",
            "path": "reference/functions/floor"
          },
          {
            "title": "<code>log</code>",
            "path": "reference/functions/log"
          },
          {
            "title": "<code>max</code>",
            "path": "reference/functions/max"
          },
          {
            "title": "<code>min</code>",
            "path": "reference/functions/min"
          },
          {
            "title": "<code>parseint</code>",
            "path": "reference/functions/parseint"
          },
          {
            "title": "<code>pow</code>",
            "path": "reference/functions/pow"
          },
          {
            "title": "<code>signum</code>",
            "path": "reference/functions/signum"
          }
        ]
      },
      {
        "title": "String functions",
        "routes": [
          {
            "title": "<code>chomp</code>",
            "path": "reference/functions/chomp"
          },
          {
            "title": "<code>endswith</code>",
            "path": "reference/functions/endswith"
          },
          {
            "title": "<code>format</code>",
            "path": "reference/functions/format"
          },
          {
            "title": "<code>formatlist</code>",
            "path": "reference/functions/formatlist"
          },
          {
            "title": "<code>indent</code>",
            "path": "reference/functions/indent"
          },
          {
            "title": "<code>join</code>",
            "path": "reference/functions/join"
          },
          {
            "title": "<code>lower</code>",
            "path": "reference/functions/lower"
          },
          {
            "title": "<code>regex</code>",
            "path": "reference/functions/regex"
          },
          {
            "title": "<code>regexall</code>",
            "path": "reference/functions/regexall"
          },
          {
            "title": "<code>replace</code>",
            "path": "reference/functions/replace"
          },
          {
            "title": "<code>split</code>",
            "path": "reference/functions/split"
          },
          {
            "title": "<code>startswith</code>",
            "path": "reference/functions/startswith"
          },
          {
            "title": "<code>strcontains</code>",
            "path": "reference/functions/strcontains"
          },
          {
            "title": "<code>strrev</code>",
            "path": "reference/functions/strrev"
          },
          {
            "title": "<code>substr</code>",
            "path": "reference/functions/substr"
          },
          {
            "title": "<code>templatestring</code>",
            "path": "reference/functions/templatestring"
          },
          {
            "title": "<code>title</code>",
            "path": "reference/functions/title"
          },
          {
            "title": "<code>trim</code>",
            "path": "reference/functions/trim"
          },
          {
            "title": "<code>trimprefix</code>",
            "path": "reference/functions/trimprefix"
          },
          {
            "title": "<code>trimsuffix</code>",
            "path": "reference/functions/trimsuffix"
          },
          {
            "title": "<code>trimspace</code>",
            "path": "reference/functions/trimspace"
          },
          {
            "title": "<code>upper</code>",
            "path": "reference/functions/upper"
          }
        ]
      },
      {
        "title": "Collection functions",
        "routes": [
          {
            "title": "<code>alltrue</code>",
            "path": "reference/functions/alltrue"
          },
          {
            "title": "<code>anytrue</code>",
            "path": "reference/functions/anytrue"
          },
          {
            "title": "<code>chunklist</code>",
            "path": "reference/functions/chunklist"
          },
          {
            "title": "<code>coalesce</code>",
            "path": "reference/functions/coalesce"
          },
          {
            "title": "<code>coalescelist</code>",
            "path": "reference/functions/coalescelist"
          },
          {
            "title": "<code>compact</code>",
            "path": "reference/functions/compact"
          },
          {
            "title": "<code>concat</code>",
            "path": "reference/functions/concat"
          },
          {
            "title": "<code>contains</code>",
            "path": "reference/functions/contains"
          },
          {
            "title": "<code>distinct</code>",
            "path": "reference/functions/distinct"
          },
          {
            "title": "<code>element</code>",
            "path": "reference/functions/element"
          },
          {
            "title": "<code>flatten</code>",
            "path": "reference/functions/flatten"
          },
          {
            "title": "<code>index</code>",
            "path": "reference/functions/index_function"
          },
          {
            "title": "<code>keys</code>",
            "path": "reference/functions/keys"
          },
          {
            "title": "<code>length</code>",
            "path": "reference/functions/length"
          },
          {
            "title": "<code>list</code>",
            "path": "reference/functions/list"
          },
          {
            "title": "<code>lookup</code>",
            "path": "reference/functions/lookup"
          },
          {
            "title": "<code>map</code>",
            "path": "reference/functions/map"
          },
          {
            "title": "<code>matchkeys</code>",
            "path": "reference/functions/matchkeys"
          },
          {
            "title": "<code>merge</code>",
            "path": "reference/functions/merge"
          },
          {
            "title": "<code>one</code>",
            "path": "reference/functions/one"
          },
          {
            "title": "<code>range</code>",
            "path": "reference/functions/range"
          },
          {
            "title": "<code>reverse</code>",
            "path": "reference/functions/reverse"
          },
          {
            "title": "<code>setintersection</code>",
            "path": "reference/functions/setintersection"
          },
          {
            "title": "<code>setproduct</code>",
            "path": "reference/functions/setproduct"
          },
          {
            "title": "<code>setsubtract</code>",
            "path": "reference/functions/setsubtract"
          },
          {
            "title": "<code>setunion</code>",
            "path": "reference/functions/setunion"
          },
          {
            "title": "<code>slice</code>",
            "path": "reference/functions/slice"
          },
          {
            "title": "<code>sort</code>",
            "path": "reference/functions/sort"
          },
          {
            "title": "<code>sum</code>",
            "path": "reference/functions/sum"
          },
          {
            "title": "<code>transpose</code>",
            "path": "reference/functions/transpose"
          },
          {
            "title": "<code>values</code>",
            "path": "reference/functions/values"
          },
          {
            "title": "<code>zipmap</code>",
            "path": "reference/functions/zipmap"
          }
        ]
      },
      {
        "title": "Encoding functions",
        "routes": [
          {
            "title": "<code>base64decode</code>",
            "path": "reference/functions/base64decode"
          },
          {
            "title": "<code>base64encode</code>",
            "path": "reference/functions/base64encode"
          },
          {
            "title": "<code>base64gzip</code>",
            "path": "reference/functions/base64gzip"
          },
          {
            "title": "<code>csvdecode</code>",
            "path": "reference/functions/csvdecode"
          },
          {
            "title": "<code>jsondecode</code>",
            "path": "reference/functions/jsondecode"
          },
          {
            "title": "<code>jsonencode</code>",
            "path": "reference/functions/jsonencode"
          },
          {
            "title": "<code>textdecodebase64</code>",
            "path": "reference/functions/textdecodebase64"
          },
          {
            "title": "<code>textencodebase64</code>",
            "path": "reference/functions/textencodebase64"
          },
          {
            "title": "<code>urlencode</code>",
            "path": "reference/functions/urlencode"
          },
          {
            "title": "<code>yamldecode</code>",
            "path": "reference/functions/yamldecode"
          },
          {
            "title": "<code>yamlencode</code>",
            "path": "reference/functions/yamlencode"
          }
        ]
      },
      {
        "title": "Filesystem functions",
        "routes": [
          {
            "title": "<code>abspath</code>",
            "path": "reference/functions/abspath"
          },
          {
            "title": "<code>dirname</code>",
            "path": "reference/functions/dirname"
          },
          {
            "title": "<code>pathexpand</code>",
            "path": "reference/functions/pathexpand"
          },
          {
            "title": "<code>basename</code>",
            "path": "reference/functions/basename"
          },
          {
            "title": "<code>file</code>",
            "path": "reference/functions/file"
          },
          {
            "title": "<code>fileexists</code>",
            "path": "reference/functions/fileexists"
          },
          {
            "title": "<code>fileset</code>",
            "path": "reference/functions/fileset"
          },
          {
            "title": "<code>filebase64</code>",
            "path": "reference/functions/filebase64"
          },
          {
            "title": "<code>templatefile</code>",
            "path": "reference/functions/templatefile"
          }
        ]
      },
      {
        "title": "Date and time functions",
        "routes": [
          {
            "title": "<code>formatdate</code>",
            "path": "reference/functions/formatdate"
          },
          {
            "title": "<code>plantimestamp</code>",
            "path": "reference/functions/plantimestamp"
          },
          {
            "title": "<code>timeadd</code>",
            "path": "reference/functions/timeadd"
          },
          {
            "title": "<code>timecmp</code>",
            "path": "reference/functions/timecmp"
          },
          {
            "title": "<code>timestamp</code>",
            "path": "reference/functions/timestamp"
          }
        ]
      },
      {
        "title": "Hash and crypto functions",
        "routes": [
          {
            "title": "<code>base64sha256</code>",
            "path": "reference/functions/base64sha256"
          },
          {
            "title": "<code>base64sha512</code>",
            "path": "reference/functions/base64sha512"
          },
          {
            "title": "<code>bcrypt</code>",
            "path": "reference/functions/bcrypt"
          },
          {
            "title": "<code>filebase64sha256</code>",
            "path": "reference/functions/filebase64sha256"
          },
          {
            "title": "<code>filebase64sha512</code>",
            "path": "reference/functions/filebase64sha512"
          },
          {
            "title": "<code>filemd5</code>",
            "path": "reference/functions/filemd5"
          },
          {
            "title": "<code>filesha1</code>",
            "path": "reference/functions/filesha1"
          },
          {
            "title": "<code>filesha256</code>",
            "path": "reference/functions/filesha256"
          },
          {
            "title": "<code>filesha512</code>",
            "path": "reference/functions/filesha512"
          },
          {
            "title": "<code>md5</code>",
            "path": "reference/functions/md5"
          },
          {
            "title": "<code>rsadecrypt</code>",
            "path": "reference/functions/rsadecrypt"
          },
          {
            "title": "<code>sha1</code>",
            "path": "reference/functions/sha1"
          },
          {
            "title": "<code>sha256</code>",
            "path": "reference/functions/sha256"
          },
          {
            "title": "<code>sha512</code>",
            "path": "reference/functions/sha512"
          },
          {
            "title": "<code>uuid</code>",
            "path": "reference/functions/uuid"
          },
          {
            "title": "<code>uuidv5</code>",
            "path": "reference/functions/uuidv5"
          }
        ]
      },
      {
        "title": "IP network functions",
        "routes": [
          {
            "title": "<code>cidrhost</code>",
            "path": "reference/functions/cidrhost"
          },
          {
            "title": "<code>cidrnetmask</code>",
            "path": "reference/functions/cidrnetmask"
          },
          {
            "title": "<code>cidrsubnet</code>",
            "path": "reference/functions/cidrsubnet"
          },
          {
            "title": "<code>cidrsubnets</code>",
            "path": "reference/functions/cidrsubnets"
          }
        ]
      },
      {
        "title": "Type conversion functions",
        "routes": [
          {
            "title": "<code>can</code>",
            "path": "reference/functions/can"
          },
          {
            "title": "<code>ephemeralasnull</code>",
            "path": "reference/functions/ephemeralasnull"
          },
          {
            "title": "<code>issensitive</code>",
            "path": "reference/functions/issensitive"
          },
          {
            "title": "<code>nonsensitive</code>",
            "path": "reference/functions/nonsensitive"
          },
          {
            "title": "<code>sensitive</code>",
            "path": "reference/functions/sensitive"
          },
          {
            "title": "<code>tobool</code>",
            "path": "reference/functions/tobool"
          },
          {
            "title": "<code>tolist</code>",
            "path": "reference/functions/tolist"
          },
          {
            "title": "<code>tomap</code>",
            "path": "reference/functions/tomap"
          },
          {
            "title": "<code>tonumber</code>",
            "path": "reference/functions/tonumber"
          },
          {
            "title": "<code>toset</code>",
            "path": "reference/functions/toset"
          },
          {
            "title": "<code>tostring</code>",
            "path": "reference/functions/tostring"
          },
          {
            "title": "<code>try</code>",
            "path": "reference/functions/try"
          },
          {
            "title": "<code>type</code>",
            "path": "reference/functions/type"
          }
        ]
      },
      {
        "title": "Terraform-specific functions",
        "routes": [
          {
            "title": "<code>provider::terraform::encode_tfvars</code>",
            "path": "reference/functions/terraform-encode_tfvars"
          },
          {
            "title": "<code>provider::terraform::decode_tfvars</code>",
            "path": "reference/functions/terraform-decode_tfvars"
          },
          {
            "title": "<code>provider::terraform::encode_expr</code>",
            "path": "reference/functions/terraform-encode_expr"
          },
          {
            "title": "<code>terraform.applying</code>",
            "path": "reference/functions/terraform-applying"
          }
        ]
      },
      {
        "title": "abs",
        "path": "reference/functions/abs",
        "hidden": true
      },
      {
        "title": "abspath",
        "path": "reference/functions/abspath",
        "hidden": true
      },
      {
        "title": "alltrue",
        "path": "reference/functions/alltrue",
        "hidden": true
      },
      {
        "title": "anytrue",
        "path": "reference/functions/anytrue",
        "hidden": true
      },
      {
        "title": "base64decode",
        "path": "reference/functions/base64decode",
        "hidden": true
      },
      {
        "title": "base64encode",
        "path": "reference/functions/base64encode",
        "hidden": true
      },
      {
        "title": "base64gzip",
        "path": "reference/functions/base64gzip",
        "hidden": true
      },
      {
        "title": "base64sha256",
        "path": "reference/functions/base64sha256",
        "hidden": true
      },
      {
        "title": "base64sha512",
        "path": "reference/functions/base64sha512",
        "hidden": true
      },
      {
        "title": "basename",
        "path": "reference/functions/basename",
        "hidden": true
      },
      {
        "title": "bcrypt",
        "path": "reference/functions/bcrypt",
        "hidden": true
      },
      {
        "title": "can",
        "path": "reference/functions/can",
        "hidden": true
      },
      {
        "title": "ceil",
        "path": "reference/functions/ceil",
        "hidden": true
      },
      {
        "title": "chomp",
        "path": "reference/functions/chomp",
        "hidden": true
      },
      {
        "title": "chunklist",
        "path": "reference/functions/chunklist",
        "hidden": true
      },
      {
        "title": "cidrhost",
        "path": "reference/functions/cidrhost",
        "hidden": true
      },
      {
        "title": "cidrnetmask",
        "path": "reference/functions/cidrnetmask",
        "hidden": true
      },
      {
        "title": "cidrsubnet",
        "path": "reference/functions/cidrsubnet",
        "hidden": true
      },
      {
        "title": "cidrsubnets",
        "path": "reference/functions/cidrsubnets",
        "hidden": true
      },
      {
        "title": "coalesce",
        "path": "reference/functions/coalesce",
        "hidden": true
      },
      {
        "title": "coalescelist",
        "path": "reference/functions/coalescelist",
        "hidden": true
      },
      {
        "title": "compact",
        "path": "reference/functions/compact",
        "hidden": true
      },
      {
        "title": "concat",
        "path": "reference/functions/concat",
        "hidden": true
      },
      {
        "title": "contains",
        "path": "reference/functions/contains",
        "hidden": true
      },
      {
        "title": "csvdecode",
        "path": "reference/functions/csvdecode",
        "hidden": true
      },
      {
        "title": "dirname",
        "path": "reference/functions/dirname",
        "hidden": true
      },
      {
        "title": "distinct",
        "path": "reference/functions/distinct",
        "hidden": true
      },
      {
        "title": "element",
        "path": "reference/functions/element",
        "hidden": true
      },
      {
        "title": "endswith",
        "path": "reference/functions/endswith",
        "hidden": true
      },
      {
        "title": "ephemeralasnull",
        "path": "reference/functions/ephemeralasnull",
        "hidden": true
      },
      {
        "title": "file",
        "path": "reference/functions/file",
        "hidden": true
      },
      {
        "title": "filebase64",
        "path": "reference/functions/filebase64",
        "hidden": true
      },
      {
        "title": "filebase64sha256",
        "path": "reference/functions/filebase64sha256",
        "hidden": true
      },
      {
        "title": "filebase64sha512",
        "path": "reference/functions/filebase64sha512",
        "hidden": true
      },
      {
        "title": "fileexists",
        "path": "reference/functions/fileexists",
        "hidden": true
      },
      {
        "title": "filemd5",
        "path": "reference/functions/filemd5",
        "hidden": true
      },
      {
        "title": "fileset",
        "path": "reference/functions/fileset",
        "hidden": true
      },
      {
        "title": "filesha1",
        "path": "reference/functions/filesha1",
        "hidden": true
      },
      {
        "title": "filesha256",
        "path": "reference/functions/filesha256",
        "hidden": true
      },
      {
        "title": "filesha512",
        "path": "reference/functions/filesha512",
        "hidden": true
      },
      {
        "title": "flatten",
        "path": "reference/functions/flatten",
        "hidden": true
      },
      {
        "title": "floor",
        "path": "reference/functions/floor",
        "hidden": true
      },
      {
        "title": "format",
        "path": "reference/functions/format",
        "hidden": true
      },
      {
        "title": "formatdate",
        "path": "reference/functions/formatdate",
        "hidden": true
      },
      {
        "title": "formatlist",
        "path": "reference/functions/formatlist",
        "hidden": true
      },
      {
        "title": "indent",
        "path": "reference/functions/indent",
        "hidden": true
      },
      {
        "title": "index",
        "path": "reference/functions/index_function",
        "hidden": true
      },
      {
        "title": "issensitive",
        "path": "reference/functions/issensitive",
        "hidden": true
      },
      {
        "title": "join",
        "path": "reference/functions/join",
        "hidden": true
      },
      {
        "title": "jsondecode",
        "path": "reference/functions/jsondecode",
        "hidden": true
      },
      {
        "title": "jsonencode",
        "path": "reference/functions/jsonencode",
        "hidden": true
      },
      {
        "title": "keys",
        "path": "reference/functions/keys",
        "hidden": true
      },
      {
        "title": "length",
        "path": "reference/functions/length",
        "hidden": true
      },
      {
        "title": "list",
        "path": "reference/functions/list",
        "hidden": true
      },
      {
        "title": "log",
        "path": "reference/functions/log",
        "hidden": true
      },
      {
        "title": "lookup",
        "path": "reference/functions/lookup",
        "hidden": true
      },
      {
        "title": "lower",
        "path": "reference/functions/lower",
        "hidden": true
      },
      {
        "title": "map",
        "path": "reference/functions/map",
        "hidden": true
      },
      {
        "title": "matchkeys",
        "path": "reference/functions/matchkeys",
        "hidden": true
      },
      {
        "title": "max",
        "path": "reference/functions/max",
        "hidden": true
      },
      {
        "title": "md5",
        "path": "reference/functions/md5",
        "hidden": true
      },
      {
        "title": "merge",
        "path": "reference/functions/merge",
        "hidden": true
      },
      {
        "title": "min",
        "path": "reference/functions/min",
        "hidden": true
      },
      {
        "title": "nonsensitive",
        "path": "reference/functions/nonsensitive",
        "hidden": true
      },
      {
        "title": "one",
        "path": "reference/functions/one",
        "hidden": true
      },
      {
        "title": "parseint",
        "path": "reference/functions/parseint",
        "hidden": true
      },
      {
        "title": "pathexpand",
        "path": "reference/functions/pathexpand",
        "hidden": true
      },
      {
        "title": "plantimestamp",
        "path": "reference/functions/plantimestamp",
        "hidden": true
      },
      {
        "title": "pow",
        "path": "reference/functions/pow",
        "hidden": true
      },
      {
        "title": "range",
        "path": "reference/functions/range",
        "hidden": true
      },
      {
        "title": "regex",
        "path": "reference/functions/regex",
        "hidden": true
      },
      {
        "title": "regexall",
        "path": "reference/functions/regexall",
        "hidden": true
      },
      {
        "title": "replace",
        "path": "reference/functions/replace",
        "hidden": true
      },
      {
        "title": "reverse",
        "path": "reference/functions/reverse",
        "hidden": true
      },
      {
        "title": "rsadecrypt",
        "path": "reference/functions/rsadecrypt",
        "hidden": true
      },
      {
        "title": "sensitive",
        "path": "reference/functions/sensitive",
        "hidden": true
      },
      {
        "title": "setintersection",
        "path": "reference/functions/setintersection",
        "hidden": true
      },
      {
        "title": "setproduct",
        "path": "reference/functions/setproduct",
        "hidden": true
      },
      {
        "title": "setsubtract",
        "path": "reference/functions/setsubtract",
        "hidden": true
      },
      {
        "title": "setunion",
        "path": "reference/functions/setunion",
        "hidden": true
      },
      {
        "title": "sha1",
        "path": "reference/functions/sha1",
        "hidden": true
      },
      {
        "title": "sha256",
        "path": "reference/functions/sha256",
        "hidden": true
      },
      {
        "title": "sha512",
        "path": "reference/functions/sha512",
        "hidden": true
      },
      {
        "title": "signum",
        "path": "reference/functions/signum",
        "hidden": true
      },
      {
        "title": "slice",
        "path": "reference/functions/slice",
        "hidden": true
      },
      {
        "title": "sort",
        "path": "reference/functions/sort",
        "hidden": true
      },
      {
        "title": "split",
        "path": "reference/functions/split",
        "hidden": true
      },
      {
        "title": "startswith",
        "path": "reference/functions/startswith",
        "hidden": true
      },
      {
        "title": "strcontains",
        "path": "reference/functions/strcontains",
        "hidden": true
      },
      {
        "title": "strrev",
        "path": "reference/functions/strrev",
        "hidden": true
      },
      {
        "title": "substr",
        "path": "reference/functions/substr",
        "hidden": true
      },
      {
        "title": "sum",
        "path": "reference/functions/sum",
        "hidden": true
      },
      {
        "title": "templatefile",
        "path": "reference/functions/templatefile",
        "hidden": true
      },
      {
        "title": "templatestring",
        "path": "reference/functions/templatestring",
        "hidden": true
      },
      {
        "title": "terraform.applying",
        "path": "reference/functions/terraform-applying",
        "hidden": true
      },
      {
        "title": "terraform-encode_tfvars",
        "path": "reference/functions/terraform-encode_tfvars",
        "hidden": true
      },
      {
        "title": "terraform-decode_tfvars",
        "path": "reference/functions/terraform-decode_tfvars",
        "hidden": true
      },
      {
        "title": "terraform-encode_expr",
        "path": "reference/functions/terraform-encode_expr",
        "hidden": true
      },
      {
        "title": "textdecodebase64",
        "path": "reference/functions/textdecodebase64",
        "hidden": true
      },
      {
        "title": "textencodebase64",
        "path": "reference/functions/textencodebase64",
        "hidden": true
      },
      {
        "title": "timeadd",
        "path": "reference/functions/timeadd",
        "hidden": true
      },
      {
        "title": "timecmp",
        "path": "reference/functions/timecmp",
        "hidden": true
      },
      {
        "title": "timestamp",
        "path": "reference/functions/timestamp",
        "hidden": true
      },
      {
        "title": "title",
        "path": "reference/functions/title",
        "hidden": true
      },
      {
        "title": "tobool",
        "path": "reference/functions/tobool",
        "hidden": true
      },
      {
        "title": "tolist",
        "path": "reference/functions/tolist",
        "hidden": true
      },
      {
        "title": "tomap",
        "path": "reference/functions/tomap",
        "hidden": true
      },
      {
        "title": "tonumber",
        "path": "reference/functions/tonumber",
        "hidden": true
      },
      {
        "title": "toset",
        "path": "reference/functions/toset",
        "hidden": true
      },
      {
        "title": "tostring",
        "path": "reference/functions/tostring",
        "hidden": true
      },
      {
        "title": "transpose",
        "path": "reference/functions/transpose",
        "hidden": true
      },
      {
        "title": "trim",
        "path": "reference/functions/trim",
        "hidden": true
      },
      {
        "title": "trimprefix",
        "path": "reference/functions/trimprefix",
        "hidden": true
      },
      {
        "title": "trimspace",
        "path": "reference/functions/trimspace",
        "hidden": true
      },
      {
        "title": "trimsuffix",
        "path": "reference/functions/trimsuffix",
        "hidden": true
      },
      {
        "title": "try",
        "path": "reference/functions/try",
        "hidden": true
      },
      {
        "title": "type",
        "path": "reference/functions/type",
        "hidden": true
      },
      {
        "title": "upper",
        "path": "reference/functions/upper",
        "hidden": true
      },
      {
        "title": "urlencode",
        "path": "reference/functions/urlencode",
        "hidden": true
      },
      {
        "title": "uuid",
        "path": "reference/functions/uuid",
        "hidden": true
      },
      {
        "title": "uuidv5",
        "path": "reference/functions/uuidv5",
        "hidden": true
      },
      {
        "title": "values",
        "path": "reference/functions/values",
        "hidden": true
      },
      {
        "title": "yamldecode",
        "path": "reference/functions/yamldecode",
        "hidden": true
      },
      {
        "title": "yamlencode",
        "path": "reference/functions/yamlencode",
        "hidden": true
      },
      {
        "title": "zipmap",
        "path": "reference/functions/zipmap",
        "hidden": true
      }
    ]
  },
  {
    "title": "Terraform internals",
    "href": "/internals"
  }
]