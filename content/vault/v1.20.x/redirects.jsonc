/**
 * Copyright (c) HashiCorp, Inc.
 * SPDX-License-Identifier: BUSL-1.1
 */

/**
  DEFINITIONS
  ------------------------------------------------------------------------------
  Standard redirects
  Redirects old URLs that no longer exist under the   containing docset to the
  new URLs. For example, updating /vault/v1.20.x/redirects.jsonc with a redirect
  that sends requests for `path/pageA` in the v1.20 docset to `path/pageB` in
  the v1.20 docset.

  Versioned redirect
  Redirects old URLs that no longer exist under the containing docset to an
  older URL in a different docset. For example, updating
  /vault/v1.20.x/redirects.jsonc with a redirect that sends requests for
  `path/upgrade-to-1.18` in the v1.20 docset (invalid) to `path/upgrade-to-1.18`
  in the v1.18 docset as vault/docs/v1.18.x/path/upgrade-to-1.18.
  Use versioned redirects to ensure that the version picker can still find the
  right page across versions.

  Backfacing redirect
  Redirects versioned URLs using new URLs from the containing docset to an
  appropriate URL in another docset version. For example, updating
  /vault/v1.20.x/redirects.jsonc with a redirect that sends requests for
  `path/important-changes` in the 1.18.x docset (invalid) to
  `path/upgrade-to-1.18` in the v1.18 docset.
  Use backfacing redirects to keep URL formatting consistant in long-living
  pages across multiple versions. For example, the Vault change tracker.


  EXAMPLES
  ------------------------------------------------------------------------------

  Standard redirect:
  {
    "source": "/vault/docs/old/path",
    "destination": "/vault/docs/new/path",
    "permanent": true,
  }

  Redirect all child paths:
  {
    "source": "/vault/docs/old/path/:slug(.*)",
    "destination": "/vault/docs/new/path/:slug",
    "permanent": true,
  }

  Redirect for a specific version:
  {
    "source": "/vault/docs/<version_string>/old/path",
    "destination": "/vault/docs/<version_string>/new/path",
    "permanent": true,
  }

  Use regex to redirect for a specific versions:
  {
    "source": "/vault/docs/:slug(<regex>)/old/path",
    "destination": "/vault/docs/:slug/new/path",
    "permanent": true,
  }

  Example regex strings

  token definition            | :slug token value
  --------------------------- | -----------------
  :slug(v1\\.(?:12|13)\\.x)   | v1.12.x, v1.13.x
  v:slug(1\\.(?:12|13)\\.x)   | 1.12.x, 1.13.x
  v:slug(1\\.(?:12|13)).x     | 1.12, 1.13
  :slug((?!path1$).*)         | any subpath that does not start with "path1"
  :slug((?!path1$|!path2$).*) | any subpath that does not start with "path1" or "path2"

*/

[


  /*****************************************************************************
   * Pre-2023 redirects
   *****************************************************************************/

  {
    "source": "/vault/docs/plugins/plugin-portal",
    "destination": "/vault/integrations",
    "permanent": true
  },


  /*****************************************************************************
   * ~2023 IA update: Combine agent and new proxy docs under /docs/agent-and-proxy
   *****************************************************************************/

  // Redirect from deleted overview to first available method
  //{
  //  "source": "/vault/docs/agent-and-proxy/autoauth/methods",
  //  "destination": "/vault/docs/agent-and-proxy/autoauth/methods/alicloud",
  //  "permanent": true
  //},
  
  // Redirect /agent/autoauth/* paths to /agent-and-proxy/autoauth
  {
    "source": "/vault/docs/agent/autoauth/:slug(.*)",
    "destination": "/vault/docs/agent-and-proxy/autoauth/:slug",
    "permanent": true
  },
    
  // Redirect the other docs/agent/* paths to /agent-and-proxy/agent/*
  {
    "source": "/vault/docs/agent/:slug((?!autoauth$).*)",
    "destination": "/vault/docs/agent-and-proxy/agent/:slug",
    "permanent": true
  },
  
  /**
   Versioned redirects for agent-and-proxy/autoauth/*
     - Source: docs/{version}/agent-and-proxy/autoauth/*
       Range: v1.4.x through v1.13.x
       Target: docs/{version}/agent/autoauth/*
  **/
  {
    "source": "/vault/docs/:version(v1\\.(?:4|5|6|7|8|9|10|11|12|13)\\.x)/agent-and-proxy/autoauth/:slug(.*)",
    "destination": "/vault/docs/:version/agent/autoauth/:slug",
    "permanent": true
  },
  
  /**
    Versioned redirects for agent-and-proxy/agent/* to corresponding legacy url
      - Source: docs/{version}/agent-and-proxy/proxy/apiproxy
        Target: docs/{version}/agent/apiproxy
        Range: 1.4.x - 1.13.x
      - Source: docs/{version}/agent-and-proxy/agent/*
        Target: docs/{version}/agent/*
        Range: 1.4.x - 1.13.x
      - Source: docs/{version}/agent-and-proxy/agent/caching/*
        Target: docs/{version}/agent/*
        Range: 1.8.x - 1.13.x
      - Source: docs/{version}/agent-and-proxy/agent/winsvc
        Target: docs/{version}/agent/winsvc
        Range: 1.7.x - 1.13.x
      - Source: docs/{version}/agent-and-proxy/agent/generate-config
        Target: docs/{version}/agent/template-config
        Range: 1.8.x - 1.9.x
  **/
  {
    "source": "/vault/docs/:version(v1\\.(?:4|5|6|7|8|9|10|11|12|13)\\.x)/agent-and-proxy/agent/:slug((?!autoauth$|caching$|winsvc$|generate-config$).*)",
    "destination": "/vault/docs/:version/agent/:slug",
    "permanent": true
  },
  {
    "source": "/vault/docs/:version(v1\\.(?:8|9|10|11|12|13)\\.x)/agent-and-proxy/agent/caching/:slug(.*)",
    "destination": "/vault/docs/:version/agent/caching/:slug",
    "permanent": true
  },
  {
    "source": "/vault/docs/:version(v1\\.(?:7|8|9|10|11|12|13)\\.x)/agent-and-proxy/agent/winsvc",
    "destination": "/vault/docs/:version/agent/winsvc",
    "permanent": true
  },
  {
    "source": "/vault/docs/:version(v1\\.(?:8|9)\\.x)/agent-and-proxy/agent/generate-config",
    "destination": "/vault/docs/:version/agent/template-config",
    "permanent": true
  },

  
  /*****************************************************************************
    2024 | Active Directory plugin EOL
   *****************************************************************************/
  
   // Redirect AD guides to the replacement plugin (LDAP)
  {
    "source": "/vault/api-docs/secret/ad",
    "destination": "/vault/api-docs/secret/ldap",
    "permanent": true
  },
  {
    "source": "/vault/docs/secrets/ad",
    "destination": "/vault/docs/secrets/ldap",
    "permanent": true
  },

  // Redirect the AD migration guide to the last supported version
  {
    "source": "/vault/docs/secrets/ad/migration-guide",
    "destination": "/vault/docs/v1.18.x/secrets/ad/migration-guide",
    "permanent": true
  },


  /*****************************************************************************
    2024-2025 | IA update: Deprecation redirects
   *****************************************************************************/
  {
    "source": "/vault/docs/deprecation/faq",
    "destination": "/vault/docs/deprecation",
    "permanent": true
  },
  {
    "source": "/vault/docs/deprecation",
    "destination": "/vault/docs/updates/deprecation",
    "permanent": true
  },



  /*****************************************************************************
    2024-2025 | IA update: CLI content refresh
   *****************************************************************************/
  {
    "source": "/vault/api-docs/system/plugins-reload-backend",
    "destination": "/vault/api-docs/system/plugins-reload",
    "permanent": true
  },
  {
    "source": "/vault/docs/commands/web",
    "destination": "/vault/docs/ui/web-cli",
    "permanent": true
  },
  {
    "source": "/vault/docs/commands/hcp",
    "destination": "/vault/docs/commands/hcp/connect",
    "permanent": true
  },


  /*****************************************************************************
    2025 | IA update: Upgrade guides
   *****************************************************************************/

  // Standard redirects
  {
    "source": "/vault/docs/upgrading",
    "destination": "/vault/docs/upgrade",
    "permanent": true
  },
  {
    "source": "/vault/docs/upgrading/raft-wal",
    "destination": "/vault/docs/upgrade/raft-wal",
    "permanent": true
  },
  {
    "source": "/vault/docs/upgrading/vault-ha-upgrade",
    "destination": "/vault/docs/upgrade/vault-ha-upgrade",
    "permanent": true
  },
  {
    "source": "/vault/docs/upgrading/plugins",
    "destination": "/vault/docs/plugins/upgrade",
    "permanent": true
  },
  {
    "source": "/vault/docs/upgrading/deduplication/:slug(.*)",
    "destination": "/vault/docs/secrets/identity/deduplication/:slug",
    "permanent": true
  },

  // Versioned redirects for version-specifc upgrade guides prior to 1.19

  // NOTE: Before v1.9, the upgrade guide for version X of Vault was published
  // under version X+1 of the docs. For simplicity, we redirect version-specific
  // upgrade guides prior to 1.9 to the versioned instance of that guide under
  // the 1.9.x docs

  // Redirect 0.5.* through 0.11.* guides to their v1.9.x instance
  {
    "source": "/vault/docs/upgrading/upgrade-to-:version(0\\.(?:5|6|7|8|9|10|11)).:patch(.*)",
    "destination": "/vault/docs/v1.9.x/upgrading/upgrade-to-:version.:patch",
    "permanent": true
  },
  // Redirect 1.0.* through 1.8.* guides to their v1.9.x instance
  {
    "source": "/vault/docs/upgrading/upgrade-to-:version(1\\.(?:0|1|2|3|4|5|6|7|8)).:patch(.*)",
    "destination": "/vault/docs/v1.9.x/upgrading/upgrade-to-:version.:patch",
    "permanent": true
  },
  // Redirect 1.9.x through 1.18.x guides to the instance under the corresponding
  // docset version
  {
    "source": "/vault/docs/upgrading/upgrade-to-:version(1\\.(?:9|10|11|12|13|14|15|16|17|18)\\.x)",
    "destination": "/vault/docs/v:version/upgrading/upgrade-to-:version",
    "permanent": true
  },
  // The URL changed with version 1.19.x
  {
    "source": "/vault/docs/upgrading/upgrade-to-1.19.x",
    "destination": "/vault/docs/v1.19.x/updates/important-changes",
    "permanent": true
  },

  // Backfacing redirects: redirect verioned URLs for 1.9.x through 1.18.x using
  // the new path to version-specific pages in the appropriate versioned docset.
  // For example:
  // /vault/docs/v1.17.x/updates/important-changes --> /vault/docs/v1.17.x/upgrading/upgrade-to-1.17.x
  {
    "source": "/vault/docs/v:version(1\\.(?:9|10|11|12|13|14|15|16|17|18)\\.x)/updates/important-changes",
    "destination": "/vault/docs/v:version/upgrading/upgrade-to-:version",
    "permanent": true
  },


  /*****************************************************************************
    2025 | IA update - Relase notes
   *****************************************************************************/

  // Versioned redirects for version-specific release notes prior to 1.19
  {
    "source": "/vault/docs/release-notes/:version(1\\.(?:4|5|6|7|8|9|10|11|12|13|14|15|17|18)).0",
    "destination": "/vault/docs/v:version.x/release-notes/:version.0",
    "permanent": true
  },

  // Redirect 1.16.x separately since 1.16.x GAed with 1.16.1 instead of 1.16.0
  {
    "source": "/vault/docs/release-notes/1.16.1",
    "destination": "/vault/docs/v1.16.x/release-notes/1.16.1",
    "permanent": true
  },

  // The URL changed with version 1.19.x
  {
    "source": "/vault/docs/release-notes/1.19.0",
    "destination": "/vault/docs/v1.19.x/updates/release-notes",
    "permanent": true
  },

  // Backfacing redirects: redirect verioned URLs before 1.19 using the new path
  // to version-specific pages in the appropriate versioned docset. For example,
  // /vault/docs/v1.17.x/updates/release-notes --> /vault/docs/v1.17.x/release-notes/1.17.0

  // Redirect 1.4.x through 1.18.x, except 1.16.x
  {
    "source": "/vault/docs/v:version(1\\.(?:4|5|6|7|8|9|10|11|12|13|14|15|17|18)).x/updates/release-notes",
    "destination": "/vault/docs/v:version.x/release-notes/:version.0",
    "permanent": true
  },
  
  // Redirect 1.16.x separately since 1.16.x GAed with 1.16.1 instead of 1.16.0
  {
    "source": "/vault/docs/v1.16.x/updates/release-notes",
    "destination": "/vault/docs/v1.16.x/release-notes/1.16.1",
    "permanent": true
  },


  /*****************************************************************************
    2025 | IA update - About Vault pages
   *****************************************************************************/
  {
    "source": "/vault/docs/what-is-vault",
    "destination": "/vault/docs/about-vault/what-is-vault",
    "permanent": true
  },
  {
    "source": "/vault/docs/use-cases",
    "destination": "/vault/docs/about-vault/why-use-vault",
    "permanent": true
  },
  {
    "source": "/vault/docs/interoperability-matrix",
    "destination": "/vault/docs/partners",
    "permanent": true
  },
  {
    "source": "/vault/docs/partnerships",
    "destination": "/vault/docs/partners/program",
    "permanent": true
  },
  {
    "source": "/vault/docs/browser-support",
    "destination": "/vault/docs/ui/browser-support",
    "permanent": true
  },
  
  // Backfacing redirects: redirect the new /docs/partners paths for verioned
  // URLs before 1.19 to the interoperability matrics in the assocated versioned
  // docset

  {
    "source": "/vault/docs/v:version(1\\.(?:4|5|6|7|8|9|10|11|12|13|14|15|16|17|18)\\.x)/partners",
    "destination": "/vault/docs/v:version/interoperability-matrix",
    "permanent": true
  },

  /*****************************************************************************
    2025 | IA update - Get Vault + Deploy Vault
   *****************************************************************************/
  {
    "source": "/vault/docs/run-as-service",
    "destination": "/vault/docs/deploy/run-as-service",
    "permanent": true
  },
  {
    "source": "/vault/docs/install/:slug(.*)",
    "destination": "/vault/docs/get-vault/:slug",
    "permanent": true
  },
  {
    "source": "/vault/docs/platform/aws/:slug(.*)",
    "destination": "/vault/docs/deploy/aws/:slug",
    "permanent": true
  },
  {
    "source": "/vault/docs/platform/k8s/:slug(.*)",
    "destination": "/vault/docs/deploy/kubernetes/:slug",
    "permanent": true
  },

  /*****************************************************************************
    2025 | IA update - Leasing redirects
   *****************************************************************************/
  
  // Concept docs
  {
    "source": "/vault/docs/concepts/lease-explosions",
    "destination": "/vault/docs/configuration/prevent-lease-explosions",
    "permanent": true
  },
  {
    "source": "/vault/docs/concepts/lease-count-quota-exceeded",
    "destination": "/vault/docs/troubleshoot/lease-count-quota-exceeded",
    "permanent": true
  },

  // Enterprise docs
  {
    "source": "/vault/docs/enterprise/license",
    "destination": "/vault/docs/license",
    "permanent": true
  },
  {
    "source": "/vault/docs/enterprise/license/autoloading",
    "destination": "/vault/docs/license/autoloading",
    "permanent": true
  },
  {
    "source": "/vault/docs/enterprise/license/utilization-reporting",
    "destination": "/vault/docs/license/utilization/auto-reporting",
    "permanent": true
  },
  {
    "source": "/vault/docs/enterprise/license/manual-reporting",
    "destination": "/vault/docs/license/utilization/manual-reporting",
    "permanent": true
  },
  {
    "source": "/vault/docs/enterprise/license/product-usage-reporting",
    "destination": "/vault/docs/license/product-usage-reporting",
    "permanent": true
  },
  {
    "source": "/vault/docs/enterprise/license/faq",
    "destination": "/vault/docs/license",
    "permanent": true
  },

  // Troubleshooting docs
  {
    "source": "/vault/docs/troubleshoot/lease-explosions",
    "destination": "/vault/docs/configuration/prevent-lease-explosions",
    "permanent": true
  },

   /*****************************************************************************
    FAQ redirects
   *****************************************************************************/
  {
    "source": "/vault/docs/faq/ssct",
    "destination": "/vault/docs/v1.10.x/faq/ssct",
    "permanent": true
  },


  /*****************************************************************************
    2025 | IA update - Sys admin redirects
   *****************************************************************************/

  {
    "source": "/vault/docs/enterprise/automated-integrated-storage-snapshots",
    "destination": "/vault/docs/sysadmin/snapshots/automation-overview",
    "permanent": true
  },
  {
    "source": "/vault/docs/v:version(1\\.(?:7|8|9|10|11|12|13|14|15|16|17|18|19)\\.x)/sysadmin/snapshots/automation-overview",
    "destination": "/vault/docs/v:version/enterprise/automated-integrated-storage-snapshots",
    "permanent": true
  },
  {
    "source": "/vault/docs/concepts/integrated-storage/snapshot-recover",
    "destination": "/vault/docs/sysadmin/snapshots/recover-a-secret",
    "permanent": true
  },

  /*****************************************************************************
    2025 | R&D - client count refresh
   *****************************************************************************/

//  {
//    "source": "/vault/docs/concepts/client-count/usage-metrics",
//    "destination": "/vault/docs/concepts/client-count/client-usage",
//    "permanent": true
//  },

  /*****************************************************************************
    Temporary bandaids
   *****************************************************************************/
  
   // Corrected double-versioned URLs to just take the first version in the string
  {
    "source": "/vault/docs/:version(v1\\.*\\.x)/v:ver(1\\.*\\.x)/:slug(.*)",
    "destination": "/vault/docs/:version/:slug",
    "permanent": true
  }
]

//Updating the above source to: /match/:gameType((?!autoauth$|basketball$|soccer$).*) should work correctl