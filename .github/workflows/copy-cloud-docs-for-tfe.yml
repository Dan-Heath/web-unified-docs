name: Copy Cloud Docs For TFE

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The TFE version for the upcoming TFE release, format is either vYYYYMM-# or MAJOR.MINOR.PATCH (without a "v" prefix).'
        required: true
        type: string
  workflow_call:
    inputs:
      version:
        description: 'The TFE version for the upcoming TFE release, format is either vYYYYMM-# or MAJOR.MINOR.PATCH (without a "v" prefix).'
        required: true
        type: string
    outputs:
      docs_branch_name:
        description: 'The name of the branch created for the new TFE version docs.'
        value: ${{ jobs.copy-docs.outputs.docs_branch_name }}

jobs:
  copy-docs:
    name: Copy Docs
    runs-on: ubuntu-latest
    outputs:
      docs_branch_name: ${{ steps.open-docs-pr.outputs.docs_branch_name }}
    steps:
      - name: Series/Release Summary
        run: |
          echo "# Summary"                                                                            >> $GITHUB_STEP_SUMMARY
          echo "**Workflow ref**: ${{github.ref_name}}"                                                  >> $GITHUB_STEP_SUMMARY
          echo ""                                                                                     >> $GITHUB_STEP_SUMMARY
          echo "Triggered by branch creation (or manual workflow):"                                   >> $GITHUB_STEP_SUMMARY
          echo ""                                                                                     >> $GITHUB_STEP_SUMMARY
          echo ""                                                                                     >> $GITHUB_STEP_SUMMARY
          echo "---"                                                                                  >> $GITHUB_STEP_SUMMARY

      # MAKE THE DOCS PR
      - name: Checkout main for new docs version RELEASE PR
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          path: '${{github.workspace}}/new-docs-pr'

      - name: Generate version-metadata for workflow
        working-directory: '${{github.workspace}}/new-docs-pr'
        run: |
          npm i
          npm run prebuild-only-version-metadata

      - name: Create the new TFE version folder for RELEASE PR
        run: |
          mkdir -p "${{github.workspace}}/new-docs-pr/content/terraform-enterprise/${{inputs.version}}"

      - name: Open new version DOCS PR
        id: open-docs-pr
        working-directory: '${{github.workspace}}/new-docs-pr'
        env:
          docs_branch_name: docs/${{inputs.version}}
          docs_pr_body: |
            # Automated Docs Release PR for TFE ${{inputs.version}}

            ...Waiting for the diff PR to be created, before finishing this PR's description...

        # secrets.TFE_WORKFLOWS_GITHUB_TOKEN requires permissions read:org, repo, workflow
        run: |
          echo ${{ secrets.TFE_WORKFLOWS_GITHUB_TOKEN }} | gh auth login --with-token
          git config --global user.email "team-rel-eng@hashicorp.com"
          git config --global user.name "tfe-release-bot"

          if [ "$(git ls-remote --heads origin ${{env.docs_branch_name}})" != "" ]; then
            echo "❌ branch name ${{env.docs_branch_name}} already exists, please delete it from remote/origin and try again. (i.e. git push origin --delete ${{env.docs_branch_name}})"

            echo "❌ branch name ${{env.docs_branch_name}} already exists, please delete it from remote/origin and try again. (i.e. git push origin --delete ${{env.docs_branch_name}})" >> $GITHUB_STEP_SUMMARY

            exit 1
          fi

          git checkout -b ${{env.docs_branch_name}}
          git add .

          git commit -m "Automated Release Docs PR" --no-verify
          git push origin HEAD

          gh pr create \
            --body="${{env.docs_pr_body}}" \
            --title="Automated Docs Release PR for TFE ${{inputs.version}}" \
            --draft \
            --head ${{env.docs_branch_name}} \
            --base main

          echo "docs_branch_name=${{env.docs_branch_name}}" >> $GITHUB_OUTPUT
          docs_pr_url=$(gh pr view --json url --jq '.url')
          echo "DOCS_PR_URL=${docs_pr_url}" >> $GITHUB_ENV
          echo "**Automated Docs PR URL**: ${docs_pr_url}" >> $GITHUB_STEP_SUMMARY

      # MAKE THE DIFF PR
      - name: Checkout main for new docs version DIFF PR
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          path: '${{github.workspace}}/new-docs-diff-pr'
          ref: '${{steps.open-docs-pr.outputs.docs_branch_name}}'

      - name: Copy files for new docs version DIFF PR
        uses: ./release/.github/actions/copy-cloud-docs-for-tfe
        with:
          source_path: '${{github.workspace}}/new-docs-pr'
          target_path: '${{github.workspace}}/new-docs-diff-pr'
          new_TFE_version: ${{inputs.version}}

      - name: Open new docs version DIFF PR
        working-directory: '${{github.workspace}}/new-docs-diff-pr'
        env:
          docs_branch_name: ${{steps.open-docs-pr.outputs.docs_branch_name}}
          diff_branch_name: docs-diff/${{inputs.version}}
          diff_pr_body: |
            # Automated Docs Diff PR for TFE ${{inputs.version}}

            This PR was created via:
            - ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}

            Copies over `content/terraform-docs-common/docs/cloud-docs` from:
            - ${{github.server_url}}/${{github.repository}}/tree/main

            Merges into the docs release branch:
            - ${{ env.DOCS_PR_URL }}

            ### Reviewers
            - [ ] @hashicorp/ptfe-review
            - [ ] @hashicorp/web-platform

        run: |
          echo ${{ secrets.TFE_WORKFLOWS_GITHUB_TOKEN }} | gh auth login --with-token
          git config --global user.email "team-rel-eng@hashicorp.com"
          git config --global user.name "tfe-release-bot"

          if [ "$(git ls-remote --heads origin ${{env.diff_branch_name}})" != "" ]; then
            echo "❌ branch name ${{env.diff_branch_name}} already exists, please delete it from remote/origin and try again. (i.e. git push origin --delete ${{env.diff_branch_name}})"

            echo "❌ branch name ${{env.diff_branch_name}} already exists, please delete it from remote/origin and try again. (i.e. git push origin --delete ${{env.diff_branch_name}})" >> $GITHUB_STEP_SUMMARY

            exit 1
          fi

          git checkout -b ${{env.diff_branch_name}}
          git add .

          git commit -m "Automated Docs Diff PR" --no-verify
          git push origin HEAD

          gh pr create \
            --body="${{env.diff_pr_body}}" \
            --title="Automated Docs Diff PR for TFE ${{inputs.version}}" \
            --draft \
            --head ${{env.diff_branch_name}} \
            --base ${{env.docs_branch_name}}

          diff_pr_url=$(gh pr view --json url --jq '.url')
          echo "DIFF_PR_URL=${diff_pr_url}" >> $GITHUB_ENV
          echo "**Automated DIFF PR URL**: ${diff_pr_url}" >> $GITHUB_STEP_SUMMARY

      - name: Update DOCS PR with DIFF PR URL
        env:
          docs_pr_body: |
            # Automated Docs Release PR for TFE ${{inputs.version}}

            This PR was created via:
            - ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}

            Changes since last release, diff PR:
            - ${{ env.DIFF_PR_URL }}

            ### Reviewers
            - [ ] @hashicorp/ptfe-review
            - [ ] @hashicorp/web-platform
        run: |
          echo ${{ secrets.TFE_WORKFLOWS_GITHUB_TOKEN }} | gh auth login --with-token
          git config --global user.email "team-rel-eng@hashicorp.com"
          git config --global user.name "tfe-release-bot"

          gh pr edit ${{env.DOCS_PR_URL}} \
            --body="${{env.docs_pr_body}}"
