name: Create PTFE Release Notes
run-name: Create changelog PR for ${{ inputs.version }} ${{ inputs.dev-mode && 'in dev mode' || '' }}
on:
  # I need this to run once before I can test this workflow
  push:
    branches:
      - 'rn/add-ptfe-release-workflow'

  workflow_dispatch:
    inputs:
      version:
        description: 'The TFE version for the upcoming TFE release, format is either vYYYYMM-# or MAJOR.MINOR.PATCH (without a "v" prefix).'
        required: true
      release-branch:
        description: 'The release branch for the upcoming TFE release, format is either ptfe-releases/vYYYYMM or release/MAJOR.MINOR.x (without a "v" prefix).'
        required: true
      last-release-tag:
        description: 'The Github Tag for the TFE release to generate a changelog from, format is either vYYYYMM-# or vMAJOR.MINOR.PATCH (with a "v" prefix).'
        required: true
      dev-mode:
        description: 'Whether to run in dev mode, a flag for creating the release notes changelog PR'
        type: boolean
        required: false
        default: false

env:
  GITHUB_TOKEN: ${{ secrets.TFE_GITHUB_TOKEN_010623 }}
  GITHUB_USER: ${{ secrets.TFE_GITHUB_USER_010623 }}
  DEV: ${{ inputs.dev-mode }}
  VERSION: ${{ inputs.version }}
  RELEASE_BRANCH: ${{ inputs.release-branch }}
  LAST_RELEASE_TAG: ${{ inputs.last-release-tag }}

jobs:
    release-notes:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout web-unified-docs repository
          uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
          with:
            repository: hashicorp/web-unified-docs
            ref: rn/add-ptfe-release-workflow
            path: ptfe-releases
            token: ${{ env.GITHUB_TOKEN }}

        - name: Install and cache Ruby gems at root
          uses: ruby/setup-ruby@52753b7da854d5c07df37391a986c76ab4615999 # v1.191.0
          with:
            working-directory: ptfe-releases
            bundler-cache: true

        - name: Clone Services Repos for Changelog Script
          run: scripts/ptfe-releases/ci/clone-service-repos.sh
          working-directory: ptfe-releases

        - name: Run execute-changelog-script.sh
          run: scripts/ptfe-releases/ci/execute-changelog-script.sh
          working-directory: ptfe-releases

        - name: Turn branch into PR
          run: scripts/ptfe-releases/ci/create-pull-request.sh
          working-directory: ptfe-releases

        - name: Get PR Number
          if: ${{ env.DEV == 'false' }}
          run: echo "PR_NUMBER=$(gh pr list --draft -H docs-tfe-releases/${{ env.VERSION }} | tail -n1 | awk '{print $1}')" >> $GITHUB_ENV
          working-directory: ptfe-releases

        - name: Create PR URL
          if: ${{ env.DEV == 'false' }}
          run: |
            echo "PR_URL=https://github.com/hashicorp/web-unified-docs/pull/${{ env.PR_NUMBER }}" >> $GITHUB_ENV
            echo "[PTFE release notes PR for  ${{ env.VERSION }}]($PR_URL)" >> $GITHUB_OUTPUT

        # - name: Slack notification
        #   id: slack
        #   if: ${{ env.DEV == 'false' }}
        #   uses: slackapi/slack-github-action@70cd7be8e40a46e8b0eced40b0de447bdb42f68e # v1.26.0
        #   with:
        #     payload: |
        #       {
        #       "text": "A new release notes PR has been created",
        #       "blocks": [
        #           {
        #           "type": "section",
        #           "text": {
        #               "type": "mrkdwn",
        #               "text": " :memo: *A new release PR is out!* :memo:"
        #           }
        #           },
        #           {
        #           "type": "divider"
        #           },
        #           {
        #           "type": "section",
        #           "text": {
        #               "type": "mrkdwn",
        #               "text": "Please Review the PR - ${{ env.PR_URL }}"
        #           }
        #           },
        #           {
        #           "type": "divider"
        #           },
        #           {
        #           "type": "section",
        #           "text": {
        #               "type": "mrkdwn",
        #               "text": " :question: Questions? Please ask here for help! :question:"
        #           }
        #           }
        #       ]
        #       }
        #   env:
        #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        #     SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
